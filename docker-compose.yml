# =================
# FITGENIUS - DOCKER COMPOSE PRODUCTION
# =================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fitgenius-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fitgenius_prod
      POSTGRES_USER: fitgenius
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - fitgenius-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fitgenius -d fitgenius_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: fitgenius-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - fitgenius-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FitGenius Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fitgenius-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://fitgenius:${DATABASE_PASSWORD:-secure_password_123}@postgres:5432/fitgenius_prod
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password_123}@redis:6379
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitgenius-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: fitgenius-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - app
    networks:
      - fitgenius-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fitgenius-network:
    driver: bridge