// Enterprise Multi-tenant Schema Extension
// This extends the existing schema.prisma with enterprise features

model Tenant {
  id            String   @id @default(cuid())
  name          String
  slug          String   @unique // gym-smartfit-sp, gym-biorhythm-rj
  domain        String?  @unique // smartfit.fitgenius.com
  logo          String?
  primaryColor  String   @default("#6366F1")
  secondaryColor String  @default("#8B5CF6")

  // Contact Information
  email         String
  phone         String?
  address       String?

  // Business Information
  businessType  TenantType @default(GYM)
  maxUsers      Int        @default(100)
  features      Json       @default("{}")

  // Billing
  subscriptionPlan String  @default("basic")
  billingEmail     String?
  billingAddress   String?

  // Settings
  settings      Json       @default("{}")
  isActive      Boolean    @default(true)

  // Timestamps
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  // Relations
  users         User[]
  workouts      Workout[]
  exercises     Exercise[]
  subscriptions TenantSubscription[]
  analytics     TenantAnalytics[]
  invitations   TenantInvitation[]

  @@map("tenants")
}

model TenantSubscription {
  id              String   @id @default(cuid())
  tenantId        String
  plan            String   // basic, premium, enterprise
  status          SubscriptionStatus
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  maxUsers        Int
  features        Json

  // Billing
  pricePerUser    Decimal
  totalAmount     Decimal
  currency        String   @default("USD")
  billingCycle    String   @default("monthly")

  // Stripe Integration
  stripeCustomerId      String?
  stripeSubscriptionId  String?
  stripeProductId       String?
  stripePriceId         String?

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  tenant          Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@map("tenant_subscriptions")
}

model TenantInvitation {
  id        String   @id @default(cuid())
  tenantId  String
  email     String
  role      UserRole @default(USER)
  status    InvitationStatus @default(PENDING)
  token     String   @unique
  expiresAt DateTime

  invitedBy String?
  invitedByUser User? @relation("TenantInvitationInviter", fields: [invitedBy], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, email])
  @@map("tenant_invitations")
}

model TenantAnalytics {
  id            String   @id @default(cuid())
  tenantId      String
  date          DateTime

  // User Metrics
  activeUsers   Int      @default(0)
  newUsers      Int      @default(0)
  totalUsers    Int      @default(0)

  // Workout Metrics
  totalWorkouts Int      @default(0)
  avgWorkoutDuration Float @default(0)

  // Engagement Metrics
  avgSessionDuration Float @default(0)
  retentionRate      Float @default(0)

  // Custom Metrics (JSON for flexibility)
  customMetrics Json     @default("{}")

  createdAt     DateTime @default(now())

  tenant        Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, date])
  @@map("tenant_analytics")
}

// Extend existing User model
model User {
  // ... existing fields ...

  // Multi-tenant fields
  tenantId      String?
  tenant        Tenant?  @relation(fields: [tenantId], references: [id])

  // Enterprise roles
  role          UserRole @default(USER)
  permissions   Json     @default("[]")

  // Department/Group (for corporate clients)
  department    String?
  employeeId    String?

  // Invitations sent
  sentInvitations TenantInvitation[] @relation("TenantInvitationInviter")

  @@map("users")
}

// Extend existing Workout model
model Workout {
  // ... existing fields ...

  // Multi-tenant
  tenantId      String?
  tenant        Tenant?  @relation(fields: [tenantId], references: [id])

  // Enterprise features
  isTemplate    Boolean  @default(false)
  templateName  String?
  visibility    WorkoutVisibility @default(PRIVATE)

  @@map("workouts")
}

// Extend existing Exercise model
model Exercise {
  // ... existing fields ...

  // Multi-tenant
  tenantId      String?
  tenant        Tenant?  @relation(fields: [tenantId], references: [id])

  // Enterprise features
  isApproved    Boolean  @default(false)
  approvedBy    String?
  customInstructions String?

  @@map("exercises")
}

// Enums
enum TenantType {
  GYM
  CORPORATE
  PERSONAL_TRAINER
  CLINIC
  SPORTS_TEAM
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
  CANCELLED
  PAST_DUE
  PAUSED
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  EXPIRED
  CANCELLED
}

enum UserRole {
  SUPER_ADMIN     // Platform admin
  TENANT_ADMIN    // Gym owner/manager
  MANAGER         // Gym manager
  TRAINER         // Personal trainer
  USER            // Regular user/member
  GUEST           // Trial user
}

enum WorkoutVisibility {
  PRIVATE
  TENANT_ONLY
  PUBLIC
}